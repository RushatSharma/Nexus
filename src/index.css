@import url('https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@400;500;600;700;800&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here.
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 36 100% 98%; /* #FFFBF5 */
    --foreground: 0 0% 0%; /* #000000 */

    --card: 36 100% 98%; /* #F5F5F5 - Pearl White */
    --card-foreground: 0 0% 0%; /* #000000 */

    --popover: 36 100% 98%; /* #F5F5F5 - Pearl White */
    --popover-foreground: 0 0% 0%; /* #000000 */

    /* Brand Colors */
    --primary: 348 89% 41%; /* #ca0b32 */
    --primary-foreground: 0 0% 100%; /* White */
    --primary-light: 348 89% 85%;
    --primary-dark: 348 89% 30%;

    --secondary: 36 100% 98%; /* #FFFBF5 - Same as background */
    --secondary-foreground: 0 0% 0%; /* #000000 - Same as foreground */

    --muted: 33 33% 91%; /* #EAE0D5 */
    --muted-foreground: 0 0% 25%; /* Darker version of foreground for muted text */

    --accent: 348 89% 41%; /* #ca0b32 */
    --accent-foreground: 0 0% 100%; /* White */

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 100%;

    --border: 33 33% 91%; /* #EAE0D5 */
    --input: 33 33% 91%; /* #EAE0D5 */
    --ring: 348 89% 41%; /* #ca0b32 */

    /* Special variables for the inverted pricing card */
    --basic-card-bg: hsl(var(--foreground));
    --basic-card-fg: hsl(var(--background));
    --basic-card-muted-fg: hsl(var(--background) / 0.7);
    --basic-card-check: hsl(var(--success));

    /* Dark theme colors */
    --dark-bg: 0 0% 0%; /* #000000 */
    --dark-card: 0 0% 4%; /* #0A0A0A */
    --dark-foreground: 0 0% 98%; /* #FAFAFA */

    /* Success and Info colors */
    --success: 122 48% 34%; /* #2E7D32 */
    --info: 30 100% 45%; /* #E65100 */
    --warning: 36 100% 50%; /* #FF8F00 */

    /* Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--primary-dark)));
    --gradient-hero: linear-gradient(135deg, hsl(var(--primary-light)), hsl(var(--primary)));
    --gradient-dark: linear-gradient(135deg, hsl(var(--dark-bg)), hsl(var(--dark-card)));

    --radius: 0.75rem;

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  .dark {
    --background: 0 0% 0%; /* #000000 */
    --foreground: 0 0% 98%; /* #FAFAFA */

    --card: 0 0% 4%; /* #0A0A0A */
    --card-foreground: 0 0% 98%; /* #FAFAFA */

    --popover: 0 0% 4%; /* #0A0A0A */
    --popover-foreground: 0 0% 98%; /* #FAFAFA */

    --primary: 348 89% 41%; /* #ca0b32 */
    --primary-foreground: 0 0% 100%;

    --secondary: 0 0% 8%; /* #141414 */
    --secondary-foreground: 0 0% 98%; /* #FAFAFA */

    --muted: 0 0% 8%; /* #141414 */
    --muted-foreground: 0 0% 63%; /* #A1A1A1 */

    --accent: 348 89% 41%; /* #ca0b32 */
    --accent-foreground: 0 0% 100%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 100%;

    --border: 0 0% 12%; /* #1F1F1F */
    --input: 0 0% 12%; /* #1F1F1F */
    --ring: 348 89% 41%; /* #ca0b32 */

    /* Inverted pricing card variables for dark mode */
    --basic-card-bg: 36 100% 98%; /* The light theme's cream background */
    --basic-card-fg: 0 0% 0%; /* The light theme's black foreground */
    --basic-card-muted-fg: 0 0% 25%;
    --basic-card-check: 0 0% 0%; /* Black checkmarks */
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-jakarta font-medium;
    /* Custom Scrollbar for Firefox */
    scrollbar-width: thin;
    scrollbar-color: hsl(var(--primary)) hsl(var(--background));
  }

  html {
    scroll-behavior: smooth;
  }

  /* Custom Scrollbar for Webkit Browsers */
  ::-webkit-scrollbar {
    width: 10px;
    height: 10px;
  }

  ::-webkit-scrollbar-track {
    background: hsl(var(--background));
  }

  ::-webkit-scrollbar-thumb {
    background-color: hsl(var(--primary));
    border-radius: 10px;
    border: 2px solid hsl(var(--background));
  }

  ::-webkit-scrollbar-thumb:hover {
    background-color: hsl(var(--primary-dark));
  }
}

@layer components {
  .btn-primary {
    @apply bg-primary hover:bg-primary-dark text-primary-foreground font-semibold py-3 px-6 rounded-full transition-all duration-300 shadow-lg hover:shadow-xl;
  }

  .btn-secondary {
    @apply bg-secondary hover:bg-muted text-secondary-foreground font-semibold py-3 px-6 rounded-full transition-all duration-300;
  }

  .btn-outline {
    @apply border-2 border-primary text-primary hover:bg-primary hover:text-primary-foreground font-semibold py-3 px-6 rounded-full transition-all duration-300;
  }

  .section-padding {
    @apply py-16 lg:py-24;
  }

  .container-custom {
    @apply max-w-7xl mx-auto px-4 sm:px-6 lg:px-8;
  }

  .text-gradient {
    @apply bg-gradient-to-r from-primary to-primary-dark bg-clip-text text-transparent;
  }

  .card-hover {
    @apply transition-all duration-300 hover:shadow-xl hover:-translate-y-2;
  }

  .dark-section {
    background: hsl(var(--dark-bg));
    color: hsl(var(--dark-foreground));
  }
}

/* --- Loading Spinner Styles --- */

:root {
  --spinner-color: hsl(var(--primary));
}

.loading-overlay {
  position: fixed;
  inset: 0;
  display: grid;
  place-content: center;
  background-color: hsl(var(--background) / 0.8);
  backdrop-filter: blur(4px);
  z-index: 100;
  overflow: hidden;
}

.loading-content {
  width: 25vmin;
  height: 25vmin;
  perspective: 100vmin;
  animation: spin-all 4s ease-in-out infinite;
}

.loading-cube {
  background: var(--spinner-color);
  width: 10vmin;
  height: 10vmin;
  left: 7.25vmin;
  top: 2.5vmin;
  border-radius: 2vmin;
  transform: rotate(48deg) rotateX(22.5deg) rotateY(-22.5deg);
  position: absolute;
  transition: all 1s ease 0s;
  transform-style: preserve-3d;
  animation: spin-cube 2s ease-in-out -3s infinite alternate;
}

.loading-cube::before {
  position: absolute;
  content: "";
  background: var(--spinner-color);
  width: calc(100% - 1vmin);
  height: calc(100% - 1vmin);
  top: 1.25vmin;
  left: 2vmin;
  border-radius: 2vmin;
  transform: rotateY(-90deg);
  transform-origin: right bottom;
  transition: all 1s ease 0s;
  animation-name: spin-cube-before;
  animation: spin-cube-before 2s ease-in-out -3s infinite alternate;
}

.loading-cube::after {
  position: absolute;
  content: "";
  background: var(--spinner-color);
  width: calc(100% - 1vmin);
  height: calc(100% - 1vmin);
  top: 2vmin;
  left: 1.25vmin;
  border-radius: 2vmin;
  transform: rotateX(90deg);
  transform-origin: right bottom;
  transition: all 1s ease 0s;
  animation-name: spin-cube-after;
  animation: spin-cube-after 2s ease-in-out -3s infinite alternate;
}

@keyframes spin-all {
  50%,
  100% {
    transform: rotate(720deg);
  }
}

@keyframes spin-cube {
  0%,
  50% {
    border-radius: 100%;
    transform: rotate(39deg) rotateX(0deg) rotateY(0deg);
    /* --- REDUCED SIZE & Adjusted Position --- */
    left: 10.75vmin; /* Was 10vmin */
    top: 6vmin;    /* Was 5vmin */
    width: 3vmin;    /* Was 5vmin */
    height: 3vmin;   /* Was 5vmin */
  }
  50%,
  100% {
    border-radius: 2vmin;
    transform: rotate(48deg) rotateX(22.5deg) rotateY(-22.5deg);
    left: 7.25vmin;
    top: 2.5vmin;
    width: 10vmin;
    height: 10vmin;
  }
}

@keyframes spin-cube-before {
  0%,
  50% {
    border-radius: 100%;
    transform: rotateY(-180deg) rotateX(0deg);
     /* --- REDUCED SIZE & Adjusted Position (Relative to parent cube's circle phase) --- */
    left: 3.5vmin;  /* Adjusted position */
    top: 4.5vmin;   /* Adjusted position */
    width: 100%;   /* Kept 100% - relative to parent element size */
    height: 100%;  /* Kept 100% - relative to parent element size */
  }
  50%,
  100% {
    border-radius: 2vmin;
    transform: rotateY(-90deg);
    left: 2vmin;
    top: 1.25vmin;
    width: calc(100% - 1vmin);
    height: calc(100% - 1vmin);
  }
}

@keyframes spin-cube-after {
  0%,
  50% {
    border-radius: 100%;
    transform: rotateY(0deg) rotateX(180deg);
     /* --- REDUCED SIZE & Adjusted Position (Relative to parent cube's circle phase) --- */
    left: 1.5vmin; /* Adjusted position */
    top: 6.5vmin;  /* Adjusted position */
    width: 100%;   /* Kept 100% - relative to parent element size */
    height: 100%;  /* Kept 100% - relative to parent element size */
  }
  50%,
  100% {
    border-radius: 2vmin;
    transform: rotateX(90deg);
    left: 1.25vmin;
    top: 2vmin;
    width: calc(100% - 1vmin);
    height: calc(100% - 1vmin);
  }
}

/* --- End Loading Spinner Styles --- */

